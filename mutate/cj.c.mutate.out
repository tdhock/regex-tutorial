*** UNIVERSALMUTATOR ***
MUTATING WITH RULES: universal.rules, c.rules, c_like.rules
SKIPPED 26 MUTANTS ONLY CHANGING STRING LITERALS
842 MUTANTS GENERATED BY RULES
PROCESSING MUTANT: 3: SEXP cj(SEXP base_list) {  ==>  SEXP cj(SEXP base_list) {
break;...INVALID 
PROCESSING MUTANT: 3: SEXP cj(SEXP base_list) {  ==>  SEXP cj(SEXP base_list) {
continue;...INVALID 
PROCESSING MUTANT: 3: SEXP cj(SEXP base_list) {  ==>  /*SEXP cj(SEXP base_list) {*/...INVALID 
PROCESSING MUTANT: 4:   int ncol = LENGTH(base_list);  ==>    int ncol = LENGTH(base_list);
  break;...INVALID 
PROCESSING MUTANT: 4:   int ncol = LENGTH(base_list);  ==>    int ncol = LENGTH(base_list);
  continue;...INVALID 
PROCESSING MUTANT: 4:   int ncol = LENGTH(base_list);  ==>    /*int ncol = LENGTH(base_list);*/...INVALID 
PROCESSING MUTANT: 5:   SEXP out = PROTECT(allocVector(VECSXP, ncol));  ==>    SEXP out = PROTECT(allocVector(VECSXP, ncol));
  break;...INVALID 
PROCESSING MUTANT: 5:   SEXP out = PROTECT(allocVector(VECSXP, ncol));  ==>    SEXP out = PROTECT(allocVector(VECSXP, ncol));
  continue;...INVALID 
PROCESSING MUTANT: 5:   SEXP out = PROTECT(allocVector(VECSXP, ncol));  ==>    SEXP out = PROTECT( ncol,allocVector(VECSXP));...INVALID 
PROCESSING MUTANT: 5:   SEXP out = PROTECT(allocVector(VECSXP, ncol));  ==>    SEXP out = PROTECT(allocVector( ncol,VECSXP));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.0.c] 
PROCESSING MUTANT: 5:   SEXP out = PROTECT(allocVector(VECSXP, ncol));  ==>    /*SEXP out = PROTECT(allocVector(VECSXP, ncol));*/...INVALID 
PROCESSING MUTANT: 6:   int nrow = 1;  ==>    int nrow = 0;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.1.c] 
PROCESSING MUTANT: 6:   int nrow = 1;  ==>    int nrow = -1;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.2.c] 
PROCESSING MUTANT: 6:   int nrow = 1;  ==>    int nrow = (1+1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.3.c] 
PROCESSING MUTANT: 6:   int nrow = 1;  ==>    int nrow = (1-1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.4.c] 
PROCESSING MUTANT: 6:   int nrow = 1;  ==>    int nrow = 1;
  break;...INVALID 
PROCESSING MUTANT: 6:   int nrow = 1;  ==>    int nrow = 1;
  continue;...INVALID 
PROCESSING MUTANT: 6:   int nrow = 1;  ==>    /*int nrow = 1;*/...INVALID 
LINE 7:   // already confirmed to be less than .Machine$integer.max at R level APPEARS TO BE COMMENT OR DEAD CODE, SKIPPING...
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; -+j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.5.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; +-j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.6.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; *+j) nrow *= length(VECTOR_ELT(base_list, j));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; +*j) nrow *= length(VECTOR_ELT(base_list, j));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; /+j) nrow *= length(VECTOR_ELT(base_list, j));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; +/j) nrow *= length(VECTOR_ELT(base_list, j));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; %+j) nrow *= length(VECTOR_ELT(base_list, j));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; +%j) nrow *= length(VECTOR_ELT(base_list, j));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; ++j) nrow += length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.7.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; ++j) nrow -= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.8.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; ++j) nrow /= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.9.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; ++j) nrow %= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.10.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j>ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.11.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j==ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.12.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<=ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.13.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j>=ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.14.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j!=ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.15.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; --j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.16.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=1; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.17.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=-1; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.18.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=(0+1); j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.19.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=(0-1); j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.20.c] 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));
  break;...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));
  continue;...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for ( j,int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; ++j) nrow *= length( j,VECTOR_ELT(base_list));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT( j,base_list));...INVALID 
PROCESSING MUTANT: 8:   for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));  ==>    /*for (int j=0; j<ncol; ++j) nrow *= length(VECTOR_ELT(base_list, j));*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.21.c] 
PROCESSING MUTANT: 9:   int eachrep = 1;  ==>    int eachrep = 0;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.22.c] 
PROCESSING MUTANT: 9:   int eachrep = 1;  ==>    int eachrep = -1;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.23.c] 
PROCESSING MUTANT: 9:   int eachrep = 1;  ==>    int eachrep = (1+1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.24.c] 
PROCESSING MUTANT: 9:   int eachrep = 1;  ==>    int eachrep = (1-1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.25.c] 
PROCESSING MUTANT: 9:   int eachrep = 1;  ==>    int eachrep = 1;
  break;...INVALID 
PROCESSING MUTANT: 9:   int eachrep = 1;  ==>    int eachrep = 1;
  continue;...INVALID 
PROCESSING MUTANT: 9:   int eachrep = 1;  ==>    /*int eachrep = 1;*/...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol+1; j>=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.26.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; +-j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.27.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; -+j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.28.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol*1; j>=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.29.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; *-j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; -*j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol/1; j>=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.30.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; /-j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; -/j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol%1; j>=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.31.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; %-j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; -%j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j==0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.32.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j!=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.33.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j<0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.34.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.35.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j<=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.36.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j===0; --j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>==0; --j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j<==0; --j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j!==0; --j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.37.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol1; j>=0; --j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; -j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.38.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-0; j>=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.39.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=1; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.40.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol--1; j>=0; --j) {...INVALID 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=-1; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.41.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-(1+1); j>=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.42.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=(0+1); --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.43.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-(1-1); j>=0; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.44.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=(0-1); --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.45.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; --j) {
  break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.46.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    for (int j=ncol-1; j>=0; --j) {
  continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.47.c] 
PROCESSING MUTANT: 10:   for (int j=ncol-1; j>=0; --j) {  ==>    /*for (int j=ncol-1; j>=0; --j) {*/...INVALID 
PROCESSING MUTANT: 11:     SEXP source = VECTOR_ELT(base_list, j), target;  ==>      SEXP source = VECTOR_ELT(base_list, j), target;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.48.c] 
PROCESSING MUTANT: 11:     SEXP source = VECTOR_ELT(base_list, j), target;  ==>      SEXP source = VECTOR_ELT(base_list, j), target;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.49.c] 
PROCESSING MUTANT: 11:     SEXP source = VECTOR_ELT(base_list, j), target;  ==>      SEXP source = VECTOR_ELT(base_list, target;
, j)...INVALID 
PROCESSING MUTANT: 11:     SEXP source = VECTOR_ELT(base_list, j), target;  ==>      SEXP source = VECTOR_ELT( j,base_list), target;...INVALID 
PROCESSING MUTANT: 11:     SEXP source = VECTOR_ELT(base_list, j), target;  ==>      /*SEXP source = VECTOR_ELT(base_list, j), target;*/...INVALID 
PROCESSING MUTANT: 12:     SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));  ==>      SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.50.c] 
PROCESSING MUTANT: 12:     SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));  ==>      SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.51.c] 
PROCESSING MUTANT: 12:     SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));  ==>      SET_VECTOR_ELT(out, target=allocVector(TYPEOF(source, j), nrow));...INVALID 
PROCESSING MUTANT: 12:     SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));  ==>      SET_VECTOR_ELT(out, j, nrow, target=allocVector(TYPEOF(source)));...INVALID 
PROCESSING MUTANT: 12:     SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));  ==>      SET_VECTOR_ELT( j,out, target=allocVector(TYPEOF(source), nrow));...INVALID 
PROCESSING MUTANT: 12:     SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));  ==>      SET_VECTOR_ELT(out, j, target=allocVector( nrow,TYPEOF(source)));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.52.c] 
PROCESSING MUTANT: 12:     SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));  ==>      SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF( nrow,source)));...INVALID 
PROCESSING MUTANT: 12:     SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));  ==>      /*SET_VECTOR_ELT(out, j, target=allocVector(TYPEOF(source), nrow));*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.53.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, target);  // includes levels of factors, integer0, custom classes, etc...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.54.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, target);  // includes levels of factors, integer1, custom classes, etc...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.55.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, target);  // includes levels of factors, integer-1, custom classes, etc...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.56.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, target);  // includes levels of factors, integer(64+1), custom classes, etc...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.57.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, target);  // includes levels of factors, integer(64-1), custom classes, etc...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.58.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.59.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.60.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, integer64, target);  // includes levels of factors, custom classes, etc...INVALID 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib(source, target);  // includes levels of factors, custom classes, integer64, etc...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.61.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      copyMostAttrib( target,source);  // includes levels of factors, integer64, custom classes, etc...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.62.c] 
PROCESSING MUTANT: 13:     copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc  ==>      /*copyMostAttrib(source, target);  // includes levels of factors, integer64, custom classes, etc*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.63.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow!=0) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.64.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow<=0) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.65.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow>=0) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.66.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow>0) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.67.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow<0) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.68.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #0...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.69.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==1) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.70.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #1...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.71.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==-1) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.72.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #-1...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.73.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==(0+1)) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.74.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #(2511+1)...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.75.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==(0-1)) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.76.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #(2511-1)...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.77.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.78.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.79.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if ( #2511
,nrow==0) continue;  // one or more columns are empty so the result will be empty...INVALID 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      /*if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.80.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (!(nrow==0)) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.81.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (0==1) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.82.c] 
PROCESSING MUTANT: 14:     if (nrow==0) continue;  // one or more columns are empty so the result will be empty, #2511  ==>      if (1==1) continue;  // one or more columns are empty so the result will be empty, #2511...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.83.c] 
PROCESSING MUTANT: 15:     int thislen = LENGTH(source);  ==>      int thislen = LENGTH(source);
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.84.c] 
PROCESSING MUTANT: 15:     int thislen = LENGTH(source);  ==>      int thislen = LENGTH(source);
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.85.c] 
PROCESSING MUTANT: 15:     int thislen = LENGTH(source);  ==>      /*int thislen = LENGTH(source);*/...INVALID 
PROCESSING MUTANT: 16:     int blocklen = thislen*eachrep;  ==>      int blocklen = thislen+eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.86.c] 
PROCESSING MUTANT: 16:     int blocklen = thislen*eachrep;  ==>      int blocklen = thislen-eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.87.c] 
PROCESSING MUTANT: 16:     int blocklen = thislen*eachrep;  ==>      int blocklen = thislen/eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.88.c] 
PROCESSING MUTANT: 16:     int blocklen = thislen*eachrep;  ==>      int blocklen = thislen%eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.89.c] 
PROCESSING MUTANT: 16:     int blocklen = thislen*eachrep;  ==>      int blocklen = thislen*eachrep;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.90.c] 
PROCESSING MUTANT: 16:     int blocklen = thislen*eachrep;  ==>      int blocklen = thislen*eachrep;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.91.c] 
PROCESSING MUTANT: 16:     int blocklen = thislen*eachrep;  ==>      /*int blocklen = thislen*eachrep;*/...INVALID 
PROCESSING MUTANT: 17:     int ncopy = nrow/blocklen;  ==>      int ncopy = nrow+blocklen;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.92.c] 
PROCESSING MUTANT: 17:     int ncopy = nrow/blocklen;  ==>      int ncopy = nrow-blocklen;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.93.c] 
PROCESSING MUTANT: 17:     int ncopy = nrow/blocklen;  ==>      int ncopy = nrow*blocklen;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.94.c] 
PROCESSING MUTANT: 17:     int ncopy = nrow/blocklen;  ==>      int ncopy = nrow%blocklen;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.95.c] 
PROCESSING MUTANT: 17:     int ncopy = nrow/blocklen;  ==>      int ncopy = nrow/blocklen;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.96.c] 
PROCESSING MUTANT: 17:     int ncopy = nrow/blocklen;  ==>      int ncopy = nrow/blocklen;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.97.c] 
PROCESSING MUTANT: 17:     int ncopy = nrow/blocklen;  ==>      /*int ncopy = nrow/blocklen;*/...INVALID 
PROCESSING MUTANT: 18:     switch(TYPEOF(source)) {  ==>      switch(TYPEOF(source)) {
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.98.c] 
PROCESSING MUTANT: 18:     switch(TYPEOF(source)) {  ==>      switch(TYPEOF(source)) {
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.99.c] 
PROCESSING MUTANT: 18:     switch(TYPEOF(source)) {  ==>      /*switch(TYPEOF(source)) {*/...INVALID 
PROCESSING MUTANT: 19:     case LGLSXP:  ==>      case LGLSXP:
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.100.c] 
PROCESSING MUTANT: 19:     case LGLSXP:  ==>      case LGLSXP:
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.101.c] 
PROCESSING MUTANT: 19:     case LGLSXP:  ==>      /*case LGLSXP:*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.102.c] 
PROCESSING MUTANT: 20:     case INTSXP: {  ==>      case INTSXP: {
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.103.c] 
PROCESSING MUTANT: 20:     case INTSXP: {  ==>      case INTSXP: {
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.104.c] 
PROCESSING MUTANT: 20:     case INTSXP: {  ==>      /*case INTSXP: {*/...INVALID 
PROCESSING MUTANT: 21:       const int *restrict sourceP = INTEGER(source);  ==>        const int +restrict sourceP = INTEGER(source);...INVALID 
PROCESSING MUTANT: 21:       const int *restrict sourceP = INTEGER(source);  ==>        const int -restrict sourceP = INTEGER(source);...INVALID 
PROCESSING MUTANT: 21:       const int *restrict sourceP = INTEGER(source);  ==>        const int /restrict sourceP = INTEGER(source);...INVALID 
PROCESSING MUTANT: 21:       const int *restrict sourceP = INTEGER(source);  ==>        const int %restrict sourceP = INTEGER(source);...INVALID 
PROCESSING MUTANT: 21:       const int *restrict sourceP = INTEGER(source);  ==>        const int *restrict sourceP = INTEGER(source);
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.105.c] 
PROCESSING MUTANT: 21:       const int *restrict sourceP = INTEGER(source);  ==>        const int *restrict sourceP = INTEGER(source);
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.106.c] 
PROCESSING MUTANT: 21:       const int *restrict sourceP = INTEGER(source);  ==>        /*const int *restrict sourceP = INTEGER(source);*/...INVALID 
PROCESSING MUTANT: 22:       int *restrict targetP = INTEGER(target);  ==>        int +restrict targetP = INTEGER(target);...INVALID 
PROCESSING MUTANT: 22:       int *restrict targetP = INTEGER(target);  ==>        int -restrict targetP = INTEGER(target);...INVALID 
PROCESSING MUTANT: 22:       int *restrict targetP = INTEGER(target);  ==>        int /restrict targetP = INTEGER(target);...INVALID 
PROCESSING MUTANT: 22:       int *restrict targetP = INTEGER(target);  ==>        int %restrict targetP = INTEGER(target);...INVALID 
PROCESSING MUTANT: 22:       int *restrict targetP = INTEGER(target);  ==>        int *restrict targetP = INTEGER(target);
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.107.c] 
PROCESSING MUTANT: 22:       int *restrict targetP = INTEGER(target);  ==>        int *restrict targetP = INTEGER(target);
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.108.c] 
PROCESSING MUTANT: 22:       int *restrict targetP = INTEGER(target);  ==>        /*int *restrict targetP = INTEGER(target);*/...INVALID 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen+eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.109.c] 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen-eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.110.c] 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen/eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.111.c] 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen%eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.112.c] 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.113.c] 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.114.c] 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads( true,getDTthreads(thislen*eachrep))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.115.c] 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads( true,thislen*eachrep))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.116.c] 
PROCESSING MUTANT: 23:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        /*#pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.117.c] 
LINE 24:       // default static schedule so two threads won't write to same cache line in last column APPEARS TO BE COMMENT OR DEAD CODE, SKIPPING...
LINE 25:       // if they did write to same cache line (and will when last column's thislen is small) there's no correctness issue APPEARS TO BE COMMENT OR DEAD CODE, SKIPPING...
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; -+i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.118.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +-i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.119.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; *+i) {...INVALID 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +*i) {...INVALID 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; /+i) {...INVALID 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +/i) {...INVALID 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; %+i) {...INVALID 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +%i) {...INVALID 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i>thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.120.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i==thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.121.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.122.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i>=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.123.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i!=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.124.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; --i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.125.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=1; i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.126.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=-1; i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.127.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=(0+1); i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.128.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=(0-1); i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.129.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; ++i) {
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.130.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; ++i) {
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.131.c] 
PROCESSING MUTANT: 26:       for (int i=0; i<thislen; ++i) {  ==>        /*for (int i=0; i<thislen; ++i) {*/...INVALID 
PROCESSING MUTANT: 27:         const int item = sourceP[i];  ==>          const int item = sourceP[i];
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.132.c] 
PROCESSING MUTANT: 27:         const int item = sourceP[i];  ==>          const int item = sourceP[i];
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.133.c] 
PROCESSING MUTANT: 27:         const int item = sourceP[i];  ==>          /*const int item = sourceP[i];*/...INVALID 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i-1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.134.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i*1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.135.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i/1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.136.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i%1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.137.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+1)+eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.138.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+1)-eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.139.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+1)/eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.140.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+1)%eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.141.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+0)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.142.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+-1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.143.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+(1+1))*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.144.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+(1-1))*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.145.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+1)*eachrep;
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.146.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int end = (i+1)*eachrep;
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.147.c] 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          const int begin = (i+1)*eachrep;...INVALID 
PROCESSING MUTANT: 28:         const int end = (i+1)*eachrep;  ==>          /*const int end = (i+1)*eachrep;*/...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; -+j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.148.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; +-j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.149.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; *+j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; +*j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; /+j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; +/j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; %+j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; +%j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i+eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.150.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i-eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.151.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i/eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.152.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i%eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.153.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j>end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.154.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j==end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.155.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<=end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.156.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j>=end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.157.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j!=end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.158.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; --j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.159.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.160.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.161.c] 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for ( mod or read ops inside loop; just rep a const contiguous write
,int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<end; ++j) targetP[ mod or read ops inside loop; just rep a const contiguous write
,j] = item;  // no div...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          for (int j=i*eachrep; j<begin; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write...INVALID 
PROCESSING MUTANT: 29:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write  ==>          /*for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  // no div, mod or read ops inside loop; just rep a const contiguous write*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.162.c] 
PROCESSING MUTANT: 30:       }  ==>        }
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.163.c] 
PROCESSING MUTANT: 30:       }  ==>        }
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.164.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy+blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.165.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy-blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.166.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy/blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.167.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy%blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.168.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.169.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.170.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads( true,getDTthreads(ncopy*blocklen))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.171.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads( true,ncopy*blocklen))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.172.c] 
PROCESSING MUTANT: 31:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        /*#pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.173.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; -+i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.174.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +-i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.175.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; *+i) {...INVALID 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +*i) {...INVALID 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; /+i) {...INVALID 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +/i) {...INVALID 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; %+i) {...INVALID 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +%i) {...INVALID 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i>ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.176.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i==ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.177.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.178.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i>=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.179.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i!=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.180.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; --i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.181.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.182.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=-1; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.183.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=(1+1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.184.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=(1-1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.185.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; ++i) {
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.186.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; ++i) {
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.187.c] 
PROCESSING MUTANT: 32:       for (int i=1; i<ncopy; ++i) {  ==>        /*for (int i=1; i<ncopy; ++i) {*/...INVALID 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP - i*blocklen, targetP, blocklen*sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.188.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP * i*blocklen, targetP, blocklen*sizeof(int));...INVALID 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP / i*blocklen, targetP, blocklen*sizeof(int));...INVALID 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP % i*blocklen, targetP, blocklen*sizeof(int));...INVALID 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i+blocklen, targetP, blocklen*sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.189.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen+sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.190.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i-blocklen, targetP, blocklen*sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.191.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen-sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.192.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i/blocklen, targetP, blocklen*sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.193.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen/sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.194.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i%blocklen, targetP, blocklen*sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.195.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen%sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.196.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.197.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.198.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy(targetP + i*blocklen, blocklen*sizeof(int, targetP));...INVALID 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          memcpy( targetP,targetP + i*blocklen, blocklen*sizeof(int));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.199.c] 
PROCESSING MUTANT: 33:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));  ==>          /*memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(int));*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.200.c] 
PROCESSING MUTANT: 34:       }  ==>        }
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.201.c] 
PROCESSING MUTANT: 34:       }  ==>        }
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.202.c] 
PROCESSING MUTANT: 35:     } break;  ==>      } break;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.203.c] 
PROCESSING MUTANT: 35:     } break;  ==>      } break;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.204.c] 
PROCESSING MUTANT: 35:     } break;  ==>      /*} break;*/...INVALID 
PROCESSING MUTANT: 36:     case REALSXP: {  ==>      case REALSXP: {
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.205.c] 
PROCESSING MUTANT: 36:     case REALSXP: {  ==>      case REALSXP: {
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.206.c] 
PROCESSING MUTANT: 36:     case REALSXP: {  ==>      /*case REALSXP: {*/...INVALID 
PROCESSING MUTANT: 37:       const double *restrict sourceP = REAL(source);  ==>        const double +restrict sourceP = REAL(source);...INVALID 
PROCESSING MUTANT: 37:       const double *restrict sourceP = REAL(source);  ==>        const double -restrict sourceP = REAL(source);...INVALID 
PROCESSING MUTANT: 37:       const double *restrict sourceP = REAL(source);  ==>        const double /restrict sourceP = REAL(source);...INVALID 
PROCESSING MUTANT: 37:       const double *restrict sourceP = REAL(source);  ==>        const double %restrict sourceP = REAL(source);...INVALID 
PROCESSING MUTANT: 37:       const double *restrict sourceP = REAL(source);  ==>        const double *restrict sourceP = REAL(source);
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.207.c] 
PROCESSING MUTANT: 37:       const double *restrict sourceP = REAL(source);  ==>        const double *restrict sourceP = REAL(source);
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.208.c] 
PROCESSING MUTANT: 37:       const double *restrict sourceP = REAL(source);  ==>        /*const double *restrict sourceP = REAL(source);*/...INVALID 
PROCESSING MUTANT: 38:       double *restrict targetP = REAL(target);  ==>        double +restrict targetP = REAL(target);...INVALID 
PROCESSING MUTANT: 38:       double *restrict targetP = REAL(target);  ==>        double -restrict targetP = REAL(target);...INVALID 
PROCESSING MUTANT: 38:       double *restrict targetP = REAL(target);  ==>        double /restrict targetP = REAL(target);...INVALID 
PROCESSING MUTANT: 38:       double *restrict targetP = REAL(target);  ==>        double %restrict targetP = REAL(target);...INVALID 
PROCESSING MUTANT: 38:       double *restrict targetP = REAL(target);  ==>        double *restrict targetP = REAL(target);
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.209.c] 
PROCESSING MUTANT: 38:       double *restrict targetP = REAL(target);  ==>        double *restrict targetP = REAL(target);
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.210.c] 
PROCESSING MUTANT: 38:       double *restrict targetP = REAL(target);  ==>        /*double *restrict targetP = REAL(target);*/...INVALID 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen+eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.211.c] 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen-eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.212.c] 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen/eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.213.c] 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen%eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.214.c] 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.215.c] 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.216.c] 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads( true,getDTthreads(thislen*eachrep))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.217.c] 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads( true,thislen*eachrep))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.218.c] 
PROCESSING MUTANT: 39:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        /*#pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.219.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; -+i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.220.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +-i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.221.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; *+i) {...INVALID 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +*i) {...INVALID 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; /+i) {...INVALID 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +/i) {...INVALID 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; %+i) {...INVALID 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +%i) {...INVALID 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i>thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.222.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i==thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.223.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.224.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i>=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.225.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i!=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.226.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; --i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.227.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=1; i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.228.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=-1; i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.229.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=(0+1); i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.230.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=(0-1); i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.231.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; ++i) {
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.232.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; ++i) {
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.233.c] 
PROCESSING MUTANT: 40:       for (int i=0; i<thislen; ++i) {  ==>        /*for (int i=0; i<thislen; ++i) {*/...INVALID 
PROCESSING MUTANT: 41:         const double item = sourceP[i];  ==>          const double item = sourceP[i];
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.234.c] 
PROCESSING MUTANT: 41:         const double item = sourceP[i];  ==>          const double item = sourceP[i];
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.235.c] 
PROCESSING MUTANT: 41:         const double item = sourceP[i];  ==>          /*const double item = sourceP[i];*/...INVALID 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i-1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.236.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i*1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.237.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i/1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.238.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i%1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.239.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)+eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.240.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)-eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.241.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)/eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.242.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)%eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.243.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+0)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.244.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+-1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.245.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+(1+1))*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.246.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+(1-1))*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.247.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)*eachrep;
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.248.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)*eachrep;
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.249.c] 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          const int begin=(i+1)*eachrep;...INVALID 
PROCESSING MUTANT: 42:         const int end=(i+1)*eachrep;  ==>          /*const int end=(i+1)*eachrep;*/...INVALID 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; -+j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.250.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; +-j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.251.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; *+j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; +*j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; /+j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; +/j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; %+j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; +%j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i+eachrep; j<end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.252.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i-eachrep; j<end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.253.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i/eachrep; j<end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.254.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i%eachrep; j<end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.255.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j>end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.256.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j==end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.257.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<=end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.258.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j>=end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.259.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j!=end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.260.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; --j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.261.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; ++j) targetP[j] = item;
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.262.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; ++j) targetP[j] = item;
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.263.c] 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<begin; ++j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 43:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          /*for (int j=i*eachrep; j<end; ++j) targetP[j] = item;*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.264.c] 
PROCESSING MUTANT: 44:       }  ==>        }
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.265.c] 
PROCESSING MUTANT: 44:       }  ==>        }
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.266.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy+blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.267.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy-blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.268.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy/blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.269.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy%blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.270.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.271.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.272.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads( true,getDTthreads(ncopy*blocklen))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.273.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads( true,ncopy*blocklen))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.274.c] 
PROCESSING MUTANT: 45:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        /*#pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.275.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; -+i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.276.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +-i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.277.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; *+i) {...INVALID 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +*i) {...INVALID 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; /+i) {...INVALID 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +/i) {...INVALID 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; %+i) {...INVALID 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +%i) {...INVALID 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i>ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.278.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i==ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.279.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.280.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i>=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.281.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i!=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.282.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; --i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.283.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.284.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=-1; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.285.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=(1+1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.286.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=(1-1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.287.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; ++i) {
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.288.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; ++i) {
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.289.c] 
PROCESSING MUTANT: 46:       for (int i=1; i<ncopy; ++i) {  ==>        /*for (int i=1; i<ncopy; ++i) {*/...INVALID 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP - i*blocklen, targetP, blocklen*sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.290.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP * i*blocklen, targetP, blocklen*sizeof(double));...INVALID 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP / i*blocklen, targetP, blocklen*sizeof(double));...INVALID 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP % i*blocklen, targetP, blocklen*sizeof(double));...INVALID 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i+blocklen, targetP, blocklen*sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.291.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen+sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.292.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i-blocklen, targetP, blocklen*sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.293.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen-sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.294.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i/blocklen, targetP, blocklen*sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.295.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen/sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.296.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i%blocklen, targetP, blocklen*sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.297.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen%sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.298.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.299.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.300.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy(targetP + i*blocklen, blocklen*sizeof(double, targetP));...INVALID 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          memcpy( targetP,targetP + i*blocklen, blocklen*sizeof(double));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.301.c] 
PROCESSING MUTANT: 47:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));  ==>          /*memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(double));*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.302.c] 
PROCESSING MUTANT: 48:       }  ==>        }
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.303.c] 
PROCESSING MUTANT: 48:       }  ==>        }
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.304.c] 
PROCESSING MUTANT: 49:     } break;  ==>      } break;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.305.c] 
PROCESSING MUTANT: 49:     } break;  ==>      } break;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.306.c] 
PROCESSING MUTANT: 49:     } break;  ==>      /*} break;*/...INVALID 
PROCESSING MUTANT: 50:     case CPLXSXP: {  ==>      case CPLXSXP: {
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.307.c] 
PROCESSING MUTANT: 50:     case CPLXSXP: {  ==>      case CPLXSXP: {
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.308.c] 
PROCESSING MUTANT: 50:     case CPLXSXP: {  ==>      /*case CPLXSXP: {*/...INVALID 
PROCESSING MUTANT: 51:       const Rcomplex *restrict sourceP = COMPLEX(source);  ==>        const Rcomplex +restrict sourceP = COMPLEX(source);...INVALID 
PROCESSING MUTANT: 51:       const Rcomplex *restrict sourceP = COMPLEX(source);  ==>        const Rcomplex -restrict sourceP = COMPLEX(source);...INVALID 
PROCESSING MUTANT: 51:       const Rcomplex *restrict sourceP = COMPLEX(source);  ==>        const Rcomplex /restrict sourceP = COMPLEX(source);...INVALID 
PROCESSING MUTANT: 51:       const Rcomplex *restrict sourceP = COMPLEX(source);  ==>        const Rcomplex %restrict sourceP = COMPLEX(source);...INVALID 
PROCESSING MUTANT: 51:       const Rcomplex *restrict sourceP = COMPLEX(source);  ==>        const Rcomplex *restrict sourceP = COMPLEX(source);
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.309.c] 
PROCESSING MUTANT: 51:       const Rcomplex *restrict sourceP = COMPLEX(source);  ==>        const Rcomplex *restrict sourceP = COMPLEX(source);
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.310.c] 
PROCESSING MUTANT: 51:       const Rcomplex *restrict sourceP = COMPLEX(source);  ==>        /*const Rcomplex *restrict sourceP = COMPLEX(source);*/...INVALID 
PROCESSING MUTANT: 52:       Rcomplex *restrict targetP = COMPLEX(target);  ==>        Rcomplex +restrict targetP = COMPLEX(target);...INVALID 
PROCESSING MUTANT: 52:       Rcomplex *restrict targetP = COMPLEX(target);  ==>        Rcomplex -restrict targetP = COMPLEX(target);...INVALID 
PROCESSING MUTANT: 52:       Rcomplex *restrict targetP = COMPLEX(target);  ==>        Rcomplex /restrict targetP = COMPLEX(target);...INVALID 
PROCESSING MUTANT: 52:       Rcomplex *restrict targetP = COMPLEX(target);  ==>        Rcomplex %restrict targetP = COMPLEX(target);...INVALID 
PROCESSING MUTANT: 52:       Rcomplex *restrict targetP = COMPLEX(target);  ==>        Rcomplex *restrict targetP = COMPLEX(target);
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.311.c] 
PROCESSING MUTANT: 52:       Rcomplex *restrict targetP = COMPLEX(target);  ==>        Rcomplex *restrict targetP = COMPLEX(target);
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.312.c] 
PROCESSING MUTANT: 52:       Rcomplex *restrict targetP = COMPLEX(target);  ==>        /*Rcomplex *restrict targetP = COMPLEX(target);*/...INVALID 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen+eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.313.c] 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen-eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.314.c] 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen/eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.315.c] 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen%eachrep, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.316.c] 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.317.c] 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.318.c] 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads( true,getDTthreads(thislen*eachrep))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.319.c] 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        #pragma omp parallel for num_threads(getDTthreads( true,thislen*eachrep))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.320.c] 
PROCESSING MUTANT: 53:       #pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))  ==>        /*#pragma omp parallel for num_threads(getDTthreads(thislen*eachrep, true))*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.321.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; -+i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.322.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +-i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.323.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; *+i) {...INVALID 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +*i) {...INVALID 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; /+i) {...INVALID 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +/i) {...INVALID 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; %+i) {...INVALID 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; +%i) {...INVALID 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i>thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.324.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i==thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.325.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.326.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i>=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.327.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i!=thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.328.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; --i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.329.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=1; i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.330.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=-1; i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.331.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=(0+1); i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.332.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=(0-1); i<thislen; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.333.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; ++i) {
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.334.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        for (int i=0; i<thislen; ++i) {
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.335.c] 
PROCESSING MUTANT: 54:       for (int i=0; i<thislen; ++i) {  ==>        /*for (int i=0; i<thislen; ++i) {*/...INVALID 
PROCESSING MUTANT: 55:         const Rcomplex item = sourceP[i];  ==>          const Rcomplex item = sourceP[i];
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.336.c] 
PROCESSING MUTANT: 55:         const Rcomplex item = sourceP[i];  ==>          const Rcomplex item = sourceP[i];
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.337.c] 
PROCESSING MUTANT: 55:         const Rcomplex item = sourceP[i];  ==>          /*const Rcomplex item = sourceP[i];*/...INVALID 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i-1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.338.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i*1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.339.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i/1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.340.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i%1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.341.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)+eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.342.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)-eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.343.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)/eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.344.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)%eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.345.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+0)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.346.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+-1)*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.347.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+(1+1))*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.348.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+(1-1))*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.349.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)*eachrep;
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.350.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int end=(i+1)*eachrep;
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.351.c] 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          const int begin=(i+1)*eachrep;...INVALID 
PROCESSING MUTANT: 56:         const int end=(i+1)*eachrep;  ==>          /*const int end=(i+1)*eachrep;*/...INVALID 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; -+j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.352.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; +-j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.353.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; *+j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; +*j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; /+j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; +/j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; %+j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; +%j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i+eachrep; j<end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.354.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i-eachrep; j<end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.355.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i/eachrep; j<end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.356.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i%eachrep; j<end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.357.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j>end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.358.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j==end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.359.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<=end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.360.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j>=end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.361.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j!=end; ++j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.362.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; --j) targetP[j] = item;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.363.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; ++j) targetP[j] = item;
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.364.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<end; ++j) targetP[j] = item;
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.365.c] 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          for (int j=i*eachrep; j<begin; ++j) targetP[j] = item;...INVALID 
PROCESSING MUTANT: 57:         for (int j=i*eachrep; j<end; ++j) targetP[j] = item;  ==>          /*for (int j=i*eachrep; j<end; ++j) targetP[j] = item;*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.366.c] 
PROCESSING MUTANT: 58:       }  ==>        }
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.367.c] 
PROCESSING MUTANT: 58:       }  ==>        }
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.368.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy+blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.369.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy-blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.370.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy/blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.371.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy%blocklen, true))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.372.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.373.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.374.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads( true,getDTthreads(ncopy*blocklen))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.375.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        #pragma omp parallel for num_threads(getDTthreads( true,ncopy*blocklen))...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.376.c] 
PROCESSING MUTANT: 59:       #pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))  ==>        /*#pragma omp parallel for num_threads(getDTthreads(ncopy*blocklen, true))*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.377.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; -+i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.378.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +-i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.379.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; *+i) {...INVALID 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +*i) {...INVALID 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; /+i) {...INVALID 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +/i) {...INVALID 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; %+i) {...INVALID 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; +%i) {...INVALID 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i>ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.380.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i==ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.381.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.382.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i>=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.383.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i!=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.384.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; --i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.385.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.386.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=-1; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.387.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=(1+1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.388.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=(1-1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.389.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; ++i) {
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.390.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; ++i) {
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.391.c] 
PROCESSING MUTANT: 60:       for (int i=1; i<ncopy; ++i) {  ==>        /*for (int i=1; i<ncopy; ++i) {*/...INVALID 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP - i*blocklen, targetP, blocklen*sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.392.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP * i*blocklen, targetP, blocklen*sizeof(Rcomplex));...INVALID 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP / i*blocklen, targetP, blocklen*sizeof(Rcomplex));...INVALID 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP % i*blocklen, targetP, blocklen*sizeof(Rcomplex));...INVALID 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i+blocklen, targetP, blocklen*sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.393.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen+sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.394.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i-blocklen, targetP, blocklen*sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.395.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen-sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.396.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i/blocklen, targetP, blocklen*sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.397.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen/sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.398.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i%blocklen, targetP, blocklen*sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.399.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen%sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.400.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.401.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.402.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy(targetP + i*blocklen, blocklen*sizeof(Rcomplex, targetP));...INVALID 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          memcpy( targetP,targetP + i*blocklen, blocklen*sizeof(Rcomplex));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.403.c] 
PROCESSING MUTANT: 61:         memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));  ==>          /*memcpy(targetP + i*blocklen, targetP, blocklen*sizeof(Rcomplex));*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.404.c] 
PROCESSING MUTANT: 62:       }  ==>        }
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.405.c] 
PROCESSING MUTANT: 62:       }  ==>        }
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.406.c] 
PROCESSING MUTANT: 63:     } break;  ==>      } break;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.407.c] 
PROCESSING MUTANT: 63:     } break;  ==>      } break;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.408.c] 
PROCESSING MUTANT: 63:     } break;  ==>      /*} break;*/...INVALID 
PROCESSING MUTANT: 64:     case STRSXP: {  ==>      case STRSXP: {
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.409.c] 
PROCESSING MUTANT: 64:     case STRSXP: {  ==>      case STRSXP: {
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.410.c] 
PROCESSING MUTANT: 64:     case STRSXP: {  ==>      /*case STRSXP: {*/...INVALID 
PROCESSING MUTANT: 65:       const SEXP *sourceP = STRING_PTR(source);  ==>        const SEXP +sourceP = STRING_PTR(source);...INVALID 
PROCESSING MUTANT: 65:       const SEXP *sourceP = STRING_PTR(source);  ==>        const SEXP -sourceP = STRING_PTR(source);...INVALID 
PROCESSING MUTANT: 65:       const SEXP *sourceP = STRING_PTR(source);  ==>        const SEXP /sourceP = STRING_PTR(source);...INVALID 
PROCESSING MUTANT: 65:       const SEXP *sourceP = STRING_PTR(source);  ==>        const SEXP %sourceP = STRING_PTR(source);...INVALID 
PROCESSING MUTANT: 65:       const SEXP *sourceP = STRING_PTR(source);  ==>        const SEXP *sourceP = STRING_PTR(source);
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.411.c] 
PROCESSING MUTANT: 65:       const SEXP *sourceP = STRING_PTR(source);  ==>        const SEXP *sourceP = STRING_PTR(source);
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.412.c] 
PROCESSING MUTANT: 65:       const SEXP *sourceP = STRING_PTR(source);  ==>        /*const SEXP *sourceP = STRING_PTR(source);*/...INVALID 
PROCESSING MUTANT: 66:       int start = 0;  ==>        int start = 1;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.413.c] 
PROCESSING MUTANT: 66:       int start = 0;  ==>        int start = -1;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.414.c] 
PROCESSING MUTANT: 66:       int start = 0;  ==>        int start = (0+1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.415.c] 
PROCESSING MUTANT: 66:       int start = 0;  ==>        int start = (0-1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.416.c] 
PROCESSING MUTANT: 66:       int start = 0;  ==>        int start = 0;
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.417.c] 
PROCESSING MUTANT: 66:       int start = 0;  ==>        int start = 0;
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.418.c] 
PROCESSING MUTANT: 66:       int start = 0;  ==>        /*int start = 0;*/...INVALID 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; -+i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.419.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; +-i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.420.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; *+i) {...INVALID 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; +*i) {...INVALID 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; /+i) {...INVALID 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; +/i) {...INVALID 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; %+i) {...INVALID 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; +%i) {...INVALID 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i>ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.421.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i==ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.422.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.423.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i>=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.424.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i!=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.425.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; --i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.426.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.427.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=-1; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.428.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=(0+1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.429.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=(0-1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.430.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; ++i) {
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.431.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; ++i) {
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.432.c] 
PROCESSING MUTANT: 67:       for (int i=0; i<ncopy; ++i) {  ==>        /*for (int i=0; i<ncopy; ++i) {*/...INVALID 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; -+j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.433.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; +-j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.434.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; *+j) {...INVALID 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; +*j) {...INVALID 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; /+j) {...INVALID 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; +/j) {...INVALID 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; %+j) {...INVALID 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; +%j) {...INVALID 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j>thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.435.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j==thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.436.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<=thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.437.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j>=thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.438.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j!=thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.439.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.440.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=1; j<thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.441.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=-1; j<thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.442.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=(0+1); j<thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.443.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=(0-1); j<thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.444.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; ++j) {
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.445.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; ++j) {
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.446.c] 
PROCESSING MUTANT: 68:         for (int j=0; j<thislen; ++j) {  ==>          /*for (int j=0; j<thislen; ++j) {*/...INVALID 
PROCESSING MUTANT: 69:           const SEXP item = sourceP[j];  ==>            const SEXP item = sourceP[j];
          break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.447.c] 
PROCESSING MUTANT: 69:           const SEXP item = sourceP[j];  ==>            const SEXP item = sourceP[j];
          continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.448.c] 
PROCESSING MUTANT: 69:           const SEXP item = sourceP[j];  ==>            /*const SEXP item = sourceP[j];*/...INVALID 
PROCESSING MUTANT: 70:           const int end = start+eachrep;  ==>            const int end = start-eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.449.c] 
PROCESSING MUTANT: 70:           const int end = start+eachrep;  ==>            const int end = start*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.450.c] 
PROCESSING MUTANT: 70:           const int end = start+eachrep;  ==>            const int end = start/eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.451.c] 
PROCESSING MUTANT: 70:           const int end = start+eachrep;  ==>            const int end = start%eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.452.c] 
PROCESSING MUTANT: 70:           const int end = start+eachrep;  ==>            const int end = start+eachrep;
          break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.453.c] 
PROCESSING MUTANT: 70:           const int end = start+eachrep;  ==>            const int end = start+eachrep;
          continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.454.c] 
PROCESSING MUTANT: 70:           const int end = start+eachrep;  ==>            const int begin = start+eachrep;...INVALID 
PROCESSING MUTANT: 70:           const int end = start+eachrep;  ==>            /*const int end = start+eachrep;*/...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; -+k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.455.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; +-k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.456.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; *+k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; +*k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; /+k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; +/k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; %+k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; +%k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read+API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.457.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read*API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.458.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read/API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.459.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read%API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.460.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k>end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.461.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k==end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.462.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<=end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.463.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k>=end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.464.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k!=end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.465.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; --k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.466.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or readAPI call to STRING_ELT...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.467.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT
          break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.468.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT
          continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.469.c] 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, item, k);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, mod, item);  // no div, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, or read-API call to STRING_ELT
, mod...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for ( k,int k=start; k<end; ++k) SET_STRING_ELT(target, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<end; ++k) SET_STRING_ELT( k,target, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            for (int k=start; k<begin; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT...INVALID 
PROCESSING MUTANT: 71:           for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT  ==>            /*for (int k=start; k<end; ++k) SET_STRING_ELT(target, k, item);  // no div, mod, or read-API call to STRING_ELT*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.470.c] 
PROCESSING MUTANT: 72:           start = end;  ==>            start = end;
          break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.471.c] 
PROCESSING MUTANT: 72:           start = end;  ==>            start = end;
          continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.472.c] 
PROCESSING MUTANT: 72:           start = end;  ==>            start = begin;...INVALID 
PROCESSING MUTANT: 72:           start = end;  ==>            /*start = end;*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.473.c] 
PROCESSING MUTANT: 73:         }  ==>          }
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.474.c] 
PROCESSING MUTANT: 73:         }  ==>          }
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.475.c] 
PROCESSING MUTANT: 74:       }  ==>        }
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.476.c] 
PROCESSING MUTANT: 74:       }  ==>        }
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.477.c] 
PROCESSING MUTANT: 75:     } break;  ==>      } break;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.478.c] 
PROCESSING MUTANT: 75:     } break;  ==>      } break;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.479.c] 
PROCESSING MUTANT: 75:     } break;  ==>      /*} break;*/...INVALID 
PROCESSING MUTANT: 76:     case VECSXP: {  ==>      case VECSXP: {
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.480.c] 
PROCESSING MUTANT: 76:     case VECSXP: {  ==>      case VECSXP: {
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.481.c] 
PROCESSING MUTANT: 76:     case VECSXP: {  ==>      /*case VECSXP: {*/...INVALID 
PROCESSING MUTANT: 77:       const SEXP *sourceP = SEXPPTR_RO(source);  ==>        const SEXP +sourceP = SEXPPTR_RO(source);...INVALID 
PROCESSING MUTANT: 77:       const SEXP *sourceP = SEXPPTR_RO(source);  ==>        const SEXP -sourceP = SEXPPTR_RO(source);...INVALID 
PROCESSING MUTANT: 77:       const SEXP *sourceP = SEXPPTR_RO(source);  ==>        const SEXP /sourceP = SEXPPTR_RO(source);...INVALID 
PROCESSING MUTANT: 77:       const SEXP *sourceP = SEXPPTR_RO(source);  ==>        const SEXP %sourceP = SEXPPTR_RO(source);...INVALID 
PROCESSING MUTANT: 77:       const SEXP *sourceP = SEXPPTR_RO(source);  ==>        const SEXP *sourceP = SEXPPTR_RO(source);
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.482.c] 
PROCESSING MUTANT: 77:       const SEXP *sourceP = SEXPPTR_RO(source);  ==>        const SEXP *sourceP = SEXPPTR_RO(source);
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.483.c] 
PROCESSING MUTANT: 77:       const SEXP *sourceP = SEXPPTR_RO(source);  ==>        /*const SEXP *sourceP = SEXPPTR_RO(source);*/...INVALID 
PROCESSING MUTANT: 78:       int start = 0;  ==>        int start = 1;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.484.c] 
PROCESSING MUTANT: 78:       int start = 0;  ==>        int start = -1;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.485.c] 
PROCESSING MUTANT: 78:       int start = 0;  ==>        int start = (0+1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.486.c] 
PROCESSING MUTANT: 78:       int start = 0;  ==>        int start = (0-1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.487.c] 
PROCESSING MUTANT: 78:       int start = 0;  ==>        int start = 0;
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.488.c] 
PROCESSING MUTANT: 78:       int start = 0;  ==>        int start = 0;
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.489.c] 
PROCESSING MUTANT: 78:       int start = 0;  ==>        /*int start = 0;*/...INVALID 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; -+i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.490.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; +-i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.491.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; *+i) {...INVALID 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; +*i) {...INVALID 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; /+i) {...INVALID 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; +/i) {...INVALID 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; %+i) {...INVALID 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; +%i) {...INVALID 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i>ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.492.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i==ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.493.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.494.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i>=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.495.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i!=ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.496.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; --i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.497.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=1; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.498.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=-1; i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.499.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=(0+1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.500.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=(0-1); i<ncopy; ++i) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.501.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; ++i) {
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.502.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        for (int i=0; i<ncopy; ++i) {
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.503.c] 
PROCESSING MUTANT: 79:       for (int i=0; i<ncopy; ++i) {  ==>        /*for (int i=0; i<ncopy; ++i) {*/...INVALID 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; -+j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.504.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; +-j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.505.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; *+j) {...INVALID 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; +*j) {...INVALID 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; /+j) {...INVALID 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; +/j) {...INVALID 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; %+j) {...INVALID 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; +%j) {...INVALID 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j>thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.506.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j==thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.507.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<=thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.508.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j>=thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.509.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j!=thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.510.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; --j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.511.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=1; j<thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.512.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=-1; j<thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.513.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=(0+1); j<thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.514.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=(0-1); j<thislen; ++j) {...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.515.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; ++j) {
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.516.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          for (int j=0; j<thislen; ++j) {
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.517.c] 
PROCESSING MUTANT: 80:         for (int j=0; j<thislen; ++j) {  ==>          /*for (int j=0; j<thislen; ++j) {*/...INVALID 
PROCESSING MUTANT: 81:           const SEXP item = sourceP[j];  ==>            const SEXP item = sourceP[j];
          break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.518.c] 
PROCESSING MUTANT: 81:           const SEXP item = sourceP[j];  ==>            const SEXP item = sourceP[j];
          continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.519.c] 
PROCESSING MUTANT: 81:           const SEXP item = sourceP[j];  ==>            /*const SEXP item = sourceP[j];*/...INVALID 
PROCESSING MUTANT: 82:           const int end = start+eachrep;  ==>            const int end = start-eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.520.c] 
PROCESSING MUTANT: 82:           const int end = start+eachrep;  ==>            const int end = start*eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.521.c] 
PROCESSING MUTANT: 82:           const int end = start+eachrep;  ==>            const int end = start/eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.522.c] 
PROCESSING MUTANT: 82:           const int end = start+eachrep;  ==>            const int end = start%eachrep;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.523.c] 
PROCESSING MUTANT: 82:           const int end = start+eachrep;  ==>            const int end = start+eachrep;
          break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.524.c] 
PROCESSING MUTANT: 82:           const int end = start+eachrep;  ==>            const int end = start+eachrep;
          continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.525.c] 
PROCESSING MUTANT: 82:           const int end = start+eachrep;  ==>            const int begin = start+eachrep;...INVALID 
PROCESSING MUTANT: 82:           const int end = start+eachrep;  ==>            /*const int end = start+eachrep;*/...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; -+k) SET_VECTOR_ELT(target, k, item);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.526.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; +-k) SET_VECTOR_ELT(target, k, item);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.527.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; *+k) SET_VECTOR_ELT(target, k, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; +*k) SET_VECTOR_ELT(target, k, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; /+k) SET_VECTOR_ELT(target, k, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; +/k) SET_VECTOR_ELT(target, k, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; %+k) SET_VECTOR_ELT(target, k, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; +%k) SET_VECTOR_ELT(target, k, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k>end; ++k) SET_VECTOR_ELT(target, k, item);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.528.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k==end; ++k) SET_VECTOR_ELT(target, k, item);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.529.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<=end; ++k) SET_VECTOR_ELT(target, k, item);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.530.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k>=end; ++k) SET_VECTOR_ELT(target, k, item);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.531.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k!=end; ++k) SET_VECTOR_ELT(target, k, item);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.532.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; --k) SET_VECTOR_ELT(target, k, item);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.533.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);
          break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.534.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);
          continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.535.c] 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, item, k);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for ( k,int k=start; k<end; ++k) SET_VECTOR_ELT(target, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<end; ++k) SET_VECTOR_ELT( k,target, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            for (int k=start; k<begin; ++k) SET_VECTOR_ELT(target, k, item);...INVALID 
PROCESSING MUTANT: 83:           for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);  ==>            /*for (int k=start; k<end; ++k) SET_VECTOR_ELT(target, k, item);*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.536.c] 
PROCESSING MUTANT: 84:           start = end;  ==>            start = end;
          break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.537.c] 
PROCESSING MUTANT: 84:           start = end;  ==>            start = end;
          continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.538.c] 
PROCESSING MUTANT: 84:           start = end;  ==>            start = begin;...INVALID 
PROCESSING MUTANT: 84:           start = end;  ==>            /*start = end;*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.539.c] 
PROCESSING MUTANT: 85:         }  ==>          }
        break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.540.c] 
PROCESSING MUTANT: 85:         }  ==>          }
        continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.541.c] 
PROCESSING MUTANT: 86:       }  ==>        }
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.542.c] 
PROCESSING MUTANT: 86:       }  ==>        }
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.543.c] 
PROCESSING MUTANT: 87:     } break;  ==>      } break;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.544.c] 
PROCESSING MUTANT: 87:     } break;  ==>      } break;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.545.c] 
PROCESSING MUTANT: 87:     } break;  ==>      /*} break;*/...INVALID 
PROCESSING MUTANT: 88:     default:  ==>      default:
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.546.c] 
PROCESSING MUTANT: 88:     default:  ==>      default:
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.547.c] 
PROCESSING MUTANT: 88:     default:  ==>      /*default:*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.548.c] 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_("Type '%s' is not supported by CJ."), type0char(TYPEOF(source)));...INVALID 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_("Type '%s' is not supported by CJ."), type1char(TYPEOF(source)));...INVALID 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_("Type '%s' is not supported by CJ."), type-1char(TYPEOF(source)));...INVALID 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_("Type '%s' is not supported by CJ."), type(2+1)char(TYPEOF(source)));...INVALID 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_("Type '%s' is not supported by CJ."), type(2-1)char(TYPEOF(source)));...INVALID 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));
      break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.549.c] 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));
      continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.550.c] 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_(""), type2char(TYPEOF(source)));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.551.c] 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error( type2char(TYPEOF(source,_("Type '%s' is not supported by CJ."))));...INVALID 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        error(_( type2char(TYPEOF(source,"Type '%s' is not supported by CJ."))));...INVALID 
PROCESSING MUTANT: 89:       error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));  ==>        /*error(_("Type '%s' is not supported by CJ."), type2char(TYPEOF(source)));*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.552.c] 
PROCESSING MUTANT: 90:     }  ==>      }
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.553.c] 
PROCESSING MUTANT: 90:     }  ==>      }
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.554.c] 
PROCESSING MUTANT: 91:     eachrep *= thislen;  ==>      eachrep += thislen;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.555.c] 
PROCESSING MUTANT: 91:     eachrep *= thislen;  ==>      eachrep -= thislen;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.556.c] 
PROCESSING MUTANT: 91:     eachrep *= thislen;  ==>      eachrep /= thislen;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.557.c] 
PROCESSING MUTANT: 91:     eachrep *= thislen;  ==>      eachrep %= thislen;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.558.c] 
PROCESSING MUTANT: 91:     eachrep *= thislen;  ==>      eachrep *= thislen;
    break;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.559.c] 
PROCESSING MUTANT: 91:     eachrep *= thislen;  ==>      eachrep *= thislen;
    continue;...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.560.c] 
PROCESSING MUTANT: 91:     eachrep *= thislen;  ==>      /*eachrep *= thislen;*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.561.c] 
PROCESSING MUTANT: 92:   }  ==>    }
  break;...INVALID 
PROCESSING MUTANT: 92:   }  ==>    }
  continue;...INVALID 
PROCESSING MUTANT: 93:   UNPROTECT(1);  ==>    UNPROTECT(0);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.562.c] 
PROCESSING MUTANT: 93:   UNPROTECT(1);  ==>    UNPROTECT(-1);...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.563.c] 
PROCESSING MUTANT: 93:   UNPROTECT(1);  ==>    UNPROTECT((1+1));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.564.c] 
PROCESSING MUTANT: 93:   UNPROTECT(1);  ==>    UNPROTECT((1-1));...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.565.c] 
PROCESSING MUTANT: 93:   UNPROTECT(1);  ==>    UNPROTECT(1);
  break;...INVALID 
PROCESSING MUTANT: 93:   UNPROTECT(1);  ==>    UNPROTECT(1);
  continue;...INVALID 
PROCESSING MUTANT: 93:   UNPROTECT(1);  ==>    /*UNPROTECT(1);*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.566.c] 
PROCESSING MUTANT: 94:   return out;  ==>    return out;
  break;...INVALID 
PROCESSING MUTANT: 94:   return out;  ==>    return out;
  continue;...INVALID 
PROCESSING MUTANT: 94:   return out;  ==>    /*return out;*/...VALID [written to /scratch/th798/mutation-testing/data.table/src/cj.c/cj.mutant.567.c] 
PROCESSING MUTANT: 95: }  ==>  }
break;...INVALID 
PROCESSING MUTANT: 95: }  ==>  }
continue;...INVALID 
568 VALID MUTANTS
264 INVALID MUTANTS
0 REDUNDANT MUTANTS
Valid Percentage: 68.26923076923077%
